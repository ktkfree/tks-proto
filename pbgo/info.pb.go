//
//Define messages to create new info to TKS-Info service.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: info.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateCSPInfoRequest is used to create a new CSP Info
type CreateCSPInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// contract_id is Global Unique MultiCluster ID
	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// csp_name is a name for users
	CspName string `protobuf:"bytes,2,opt,name=csp_name,json=cspName,proto3" json:"csp_name,omitempty"`
	// auth is an optional. This is an authentication info for IaaS.
	Auth string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CreateCSPInfoRequest) Reset() {
	*x = CreateCSPInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCSPInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCSPInfoRequest) ProtoMessage() {}

func (x *CreateCSPInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCSPInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateCSPInfoRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCSPInfoRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *CreateCSPInfoRequest) GetCspName() string {
	if x != nil {
		return x.CspName
	}
	return ""
}

func (x *CreateCSPInfoRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

// GetCSPAuthResponse is used to get an authentication information by
//   csp id.
type GetCSPAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// auth is an authentication info stiringified in JSON.
	Auth string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GetCSPAuthResponse) Reset() {
	*x = GetCSPAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCSPAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCSPAuthResponse) ProtoMessage() {}

func (x *GetCSPAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCSPAuthResponse.ProtoReflect.Descriptor instead.
func (*GetCSPAuthResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{1}
}

func (x *GetCSPAuthResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetCSPAuthResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetCSPAuthResponse) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

// UpdateCSPInfoRequest updates an authenticationg information for CSP.
type UpdateCSPInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// csp_id is .
	CspId string `protobuf:"bytes,1,opt,name=csp_id,json=cspId,proto3" json:"csp_id,omitempty"`
	// auth is an authentication info to update.
	Auth string `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *UpdateCSPInfoRequest) Reset() {
	*x = UpdateCSPInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCSPInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCSPInfoRequest) ProtoMessage() {}

func (x *UpdateCSPInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCSPInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateCSPInfoRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCSPInfoRequest) GetCspId() string {
	if x != nil {
		return x.CspId
	}
	return ""
}

func (x *UpdateCSPInfoRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

// AddClusterInfoRequest is used to add a new cluster info
type AddClusterInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// contract_id is a contract ID.
	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// csp_id is an ID of CSPInfo.
	CspId string `protobuf:"bytes,2,opt,name=csp_id,json=cspId,proto3" json:"csp_id,omitempty"`
	// cluster_name is a cluster name defined by users
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// conf is a cluster configuration
	Conf *ClusterConf `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *AddClusterInfoRequest) Reset() {
	*x = AddClusterInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterInfoRequest) ProtoMessage() {}

func (x *AddClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*AddClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{3}
}

func (x *AddClusterInfoRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *AddClusterInfoRequest) GetCspId() string {
	if x != nil {
		return x.CspId
	}
	return ""
}

func (x *AddClusterInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddClusterInfoRequest) GetConf() *ClusterConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

// UpdateClusterConfRequest is used to update kubernetes cluster configuration
// to correspond with id
type UpdateClusterConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// conf is a kubernetes cluster configuration
	Conf *ClusterConf `protobuf:"bytes,2,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *UpdateClusterConfRequest) Reset() {
	*x = UpdateClusterConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterConfRequest) ProtoMessage() {}

func (x *UpdateClusterConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterConfRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterConfRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateClusterConfRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterConfRequest) GetConf() *ClusterConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

// GetClusterRequest is used to get info of MultiCluster to correspond with id
type GetClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{5}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// GetClusterResponse contains a cluster info.
type GetClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// cluster is info for the cluster
	Cluster *Cluster `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetClusterResponse) Reset() {
	*x = GetClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResponse) ProtoMessage() {}

func (x *GetClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResponse.ProtoReflect.Descriptor instead.
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{6}
}

func (x *GetClusterResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetClusterResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// GetClustersRequest returns a list of clusters in specific CSP.
type GetClustersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// csp_id is a Global Unique ID
	CspId string `protobuf:"bytes,1,opt,name=csp_id,json=cspId,proto3" json:"csp_id,omitempty"`
}

func (x *GetClustersRequest) Reset() {
	*x = GetClustersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersRequest) ProtoMessage() {}

func (x *GetClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersRequest.ProtoReflect.Descriptor instead.
func (*GetClustersRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{7}
}

func (x *GetClustersRequest) GetCspId() string {
	if x != nil {
		return x.CspId
	}
	return ""
}

// GetClustersResponse contains an array of cluster infos.
type GetClustersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// cluster is info. for the cluster
	Clusters []*Cluster `protobuf:"bytes,3,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *GetClustersResponse) Reset() {
	*x = GetClustersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersResponse) ProtoMessage() {}

func (x *GetClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersResponse.ProtoReflect.Descriptor instead.
func (*GetClustersResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{8}
}

func (x *GetClustersResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetClustersResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

// UpdateClusterStatusRequest is used to change status of the cluster
type UpdateClusterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// status is the clusterstatus to be changed
	Status ClusterStatus `protobuf:"varint,2,opt,name=status,proto3,enum=pbgo.ClusterStatus" json:"status,omitempty"`
}

func (x *UpdateClusterStatusRequest) Reset() {
	*x = UpdateClusterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterStatusRequest) ProtoMessage() {}

func (x *UpdateClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateClusterStatusRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterStatusRequest) GetStatus() ClusterStatus {
	if x != nil {
		return x.Status
	}
	return ClusterStatus_UNSPECIFIED
}

// ValidateLabelUniquenessRequest is used to check the uniqueness of the label
type ValidateLabelUniquenessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// label is a label to check uniqueness
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ValidateLabelUniquenessRequest) Reset() {
	*x = ValidateLabelUniquenessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateLabelUniquenessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateLabelUniquenessRequest) ProtoMessage() {}

func (x *ValidateLabelUniquenessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateLabelUniquenessRequest.ProtoReflect.Descriptor instead.
func (*ValidateLabelUniquenessRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{10}
}

func (x *ValidateLabelUniquenessRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// ValidateLabelUniquenessResponse contains the resule of the uniqueness check
type ValidateLabelUniquenessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// uniqueness is result of checking uniqueness for the label
	Uniqueness bool `protobuf:"varint,3,opt,name=uniqueness,proto3" json:"uniqueness,omitempty"` // uniqueness for requested label
}

func (x *ValidateLabelUniquenessResponse) Reset() {
	*x = ValidateLabelUniquenessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateLabelUniquenessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateLabelUniquenessResponse) ProtoMessage() {}

func (x *ValidateLabelUniquenessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateLabelUniquenessResponse.ProtoReflect.Descriptor instead.
func (*ValidateLabelUniquenessResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{11}
}

func (x *ValidateLabelUniquenessResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *ValidateLabelUniquenessResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ValidateLabelUniquenessResponse) GetUniqueness() bool {
	if x != nil {
		return x.Uniqueness
	}
	return false
}

// AddAppRequest is used to add a new app info
type AddAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// service_app is a service_app info
	ServiceApp *ServiceApp `protobuf:"bytes,2,opt,name=service_app,json=serviceApp,proto3" json:"service_app,omitempty"`
}

func (x *AddAppRequest) Reset() {
	*x = AddAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppRequest) ProtoMessage() {}

func (x *AddAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppRequest.ProtoReflect.Descriptor instead.
func (*AddAppRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{12}
}

func (x *AddAppRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *AddAppRequest) GetServiceApp() *ServiceApp {
	if x != nil {
		return x.ServiceApp
	}
	return nil
}

// UpdateAppRequest is used to update app info
type UpdateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// service_app is a service_app info
	ServiceApp *ServiceApp `protobuf:"bytes,2,opt,name=service_app,json=serviceApp,proto3" json:"service_app,omitempty"`
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAppRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateAppRequest) GetServiceApp() *ServiceApp {
	if x != nil {
		return x.ServiceApp
	}
	return nil
}

// DeleteAppRequest is used to delete app info
type DeleteAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// app_id is a app id which will be deleted
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *DeleteAppRequest) Reset() {
	*x = DeleteAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppRequest) ProtoMessage() {}

func (x *DeleteAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteAppRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DeleteAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// GetAppsRequest is used to get an array of application infos on the cluster
type GetAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is the global Unique cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// app_name is a name of the application
	AppName string `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	// app_type is a type of the application
	Type AppType `protobuf:"varint,3,opt,name=type,proto3,enum=pbgo.AppType" json:"type,omitempty"`
}

func (x *GetAppsRequest) Reset() {
	*x = GetAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppsRequest) ProtoMessage() {}

func (x *GetAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppsRequest.ProtoReflect.Descriptor instead.
func (*GetAppsRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{15}
}

func (x *GetAppsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GetAppsRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *GetAppsRequest) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_APP_TYPE_UNSPECIFIED
}

// GetAppRequest is used to get an array of application infos on the cluster
type GetAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is the global Unique cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// app_name is a name of the application
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppRequest) Reset() {
	*x = GetAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppRequest) ProtoMessage() {}

func (x *GetAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{16}
}

func (x *GetAppRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GetAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// GetAppResponse contains an array of cluster infos.
type GetAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// app is a application Info
	App *ServiceApp `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *GetAppResponse) Reset() {
	*x = GetAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResponse) ProtoMessage() {}

func (x *GetAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResponse.ProtoReflect.Descriptor instead.
func (*GetAppResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{17}
}

func (x *GetAppResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetAppResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAppResponse) GetApp() *ServiceApp {
	if x != nil {
		return x.App
	}
	return nil
}

// GetAppsResponse contains an array of application infos.
type GetAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// apps is an array of applications
	Apps []*ServiceApp `protobuf:"bytes,3,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *GetAppsResponse) Reset() {
	*x = GetAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppsResponse) ProtoMessage() {}

func (x *GetAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppsResponse.ProtoReflect.Descriptor instead.
func (*GetAppsResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{18}
}

func (x *GetAppsResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetAppsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAppsResponse) GetApps() []*ServiceApp {
	if x != nil {
		return x.Apps
	}
	return nil
}

// UpdateAppStatusRequest is used to change the status of the app
type UpdateAppStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is the global Unique cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// app_id is the application id to change the status
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// status is a AppStatus of the application
	Status AppStatus `protobuf:"varint,3,opt,name=status,proto3,enum=pbgo.AppStatus" json:"status,omitempty"`
}

func (x *UpdateAppStatusRequest) Reset() {
	*x = UpdateAppStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppStatusRequest) ProtoMessage() {}

func (x *UpdateAppStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppStatusRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAppStatusRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateAppStatusRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateAppStatusRequest) GetStatus() AppStatus {
	if x != nil {
		return x.Status
	}
	return AppStatus_APP_UNSPECIFIED
}

// UpdateEndpointsRequest is used to change status of the cluster
type UpdateEndpointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is the global Unique cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// app_id is the application id to change the endpoint
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// endpoints is an array of endpoints to update
	Endpoints []*Endpoint `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
}

func (x *UpdateEndpointsRequest) Reset() {
	*x = UpdateEndpointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEndpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEndpointsRequest) ProtoMessage() {}

func (x *UpdateEndpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEndpointsRequest.ProtoReflect.Descriptor instead.
func (*UpdateEndpointsRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateEndpointsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateEndpointsRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateEndpointsRequest) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

var File_info_proto protoreflect.FileDescriptor

var file_info_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62,
	0x67, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x73, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x73, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x53, 0x50, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0x41, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x73,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x73, 0x70, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x63, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x73, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x63,
	0x6f, 0x6e, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f,
	0x6e, 0x66, 0x22, 0x60, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x67, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04,
	0x63, 0x6f, 0x6e, 0x66, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x73, 0x70, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x68,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62,
	0x67, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x1e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x22, 0x84, 0x01, 0x0a, 0x1f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x61, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x67, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x22, 0x64, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70,
	0x22, 0x48, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x22, 0x77, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x77, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7c,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x32, 0x9b, 0x06, 0x0a,
	0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x43, 0x53, 0x50, 0x49, 0x44, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x53,
	0x50, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1e,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x62,
	0x67, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xfc, 0x04, 0x0a, 0x0e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70,
	0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x44, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62,
	0x67, 0x6f, 0x2e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x6b, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x67, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_info_proto_rawDescOnce sync.Once
	file_info_proto_rawDescData = file_info_proto_rawDesc
)

func file_info_proto_rawDescGZIP() []byte {
	file_info_proto_rawDescOnce.Do(func() {
		file_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_info_proto_rawDescData)
	})
	return file_info_proto_rawDescData
}

var file_info_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_info_proto_goTypes = []interface{}{
	(*CreateCSPInfoRequest)(nil),            // 0: pbgo.CreateCSPInfoRequest
	(*GetCSPAuthResponse)(nil),              // 1: pbgo.GetCSPAuthResponse
	(*UpdateCSPInfoRequest)(nil),            // 2: pbgo.UpdateCSPInfoRequest
	(*AddClusterInfoRequest)(nil),           // 3: pbgo.AddClusterInfoRequest
	(*UpdateClusterConfRequest)(nil),        // 4: pbgo.UpdateClusterConfRequest
	(*GetClusterRequest)(nil),               // 5: pbgo.GetClusterRequest
	(*GetClusterResponse)(nil),              // 6: pbgo.GetClusterResponse
	(*GetClustersRequest)(nil),              // 7: pbgo.GetClustersRequest
	(*GetClustersResponse)(nil),             // 8: pbgo.GetClustersResponse
	(*UpdateClusterStatusRequest)(nil),      // 9: pbgo.UpdateClusterStatusRequest
	(*ValidateLabelUniquenessRequest)(nil),  // 10: pbgo.ValidateLabelUniquenessRequest
	(*ValidateLabelUniquenessResponse)(nil), // 11: pbgo.ValidateLabelUniquenessResponse
	(*AddAppRequest)(nil),                   // 12: pbgo.AddAppRequest
	(*UpdateAppRequest)(nil),                // 13: pbgo.UpdateAppRequest
	(*DeleteAppRequest)(nil),                // 14: pbgo.DeleteAppRequest
	(*GetAppsRequest)(nil),                  // 15: pbgo.GetAppsRequest
	(*GetAppRequest)(nil),                   // 16: pbgo.GetAppRequest
	(*GetAppResponse)(nil),                  // 17: pbgo.GetAppResponse
	(*GetAppsResponse)(nil),                 // 18: pbgo.GetAppsResponse
	(*UpdateAppStatusRequest)(nil),          // 19: pbgo.UpdateAppStatusRequest
	(*UpdateEndpointsRequest)(nil),          // 20: pbgo.UpdateEndpointsRequest
	(Code)(0),                               // 21: pbgo.Code
	(*Error)(nil),                           // 22: pbgo.Error
	(*ClusterConf)(nil),                     // 23: pbgo.ClusterConf
	(*Cluster)(nil),                         // 24: pbgo.Cluster
	(ClusterStatus)(0),                      // 25: pbgo.ClusterStatus
	(*ServiceApp)(nil),                      // 26: pbgo.ServiceApp
	(AppType)(0),                            // 27: pbgo.AppType
	(AppStatus)(0),                          // 28: pbgo.AppStatus
	(*Endpoint)(nil),                        // 29: pbgo.Endpoint
	(*emptypb.Empty)(nil),                   // 30: google.protobuf.Empty
	(*IDRequest)(nil),                       // 31: pbgo.IDRequest
	(*IDResponse)(nil),                      // 32: pbgo.IDResponse
	(*IDsResponse)(nil),                     // 33: pbgo.IDsResponse
	(*SimpleResponse)(nil),                  // 34: pbgo.SimpleResponse
}
var file_info_proto_depIdxs = []int32{
	21, // 0: pbgo.GetCSPAuthResponse.code:type_name -> pbgo.Code
	22, // 1: pbgo.GetCSPAuthResponse.error:type_name -> pbgo.Error
	23, // 2: pbgo.AddClusterInfoRequest.conf:type_name -> pbgo.ClusterConf
	23, // 3: pbgo.UpdateClusterConfRequest.conf:type_name -> pbgo.ClusterConf
	21, // 4: pbgo.GetClusterResponse.code:type_name -> pbgo.Code
	22, // 5: pbgo.GetClusterResponse.error:type_name -> pbgo.Error
	24, // 6: pbgo.GetClusterResponse.cluster:type_name -> pbgo.Cluster
	21, // 7: pbgo.GetClustersResponse.code:type_name -> pbgo.Code
	22, // 8: pbgo.GetClustersResponse.error:type_name -> pbgo.Error
	24, // 9: pbgo.GetClustersResponse.clusters:type_name -> pbgo.Cluster
	25, // 10: pbgo.UpdateClusterStatusRequest.status:type_name -> pbgo.ClusterStatus
	21, // 11: pbgo.ValidateLabelUniquenessResponse.code:type_name -> pbgo.Code
	22, // 12: pbgo.ValidateLabelUniquenessResponse.error:type_name -> pbgo.Error
	26, // 13: pbgo.AddAppRequest.service_app:type_name -> pbgo.ServiceApp
	26, // 14: pbgo.UpdateAppRequest.service_app:type_name -> pbgo.ServiceApp
	27, // 15: pbgo.GetAppsRequest.type:type_name -> pbgo.AppType
	21, // 16: pbgo.GetAppResponse.code:type_name -> pbgo.Code
	22, // 17: pbgo.GetAppResponse.error:type_name -> pbgo.Error
	26, // 18: pbgo.GetAppResponse.app:type_name -> pbgo.ServiceApp
	21, // 19: pbgo.GetAppsResponse.code:type_name -> pbgo.Code
	22, // 20: pbgo.GetAppsResponse.error:type_name -> pbgo.Error
	26, // 21: pbgo.GetAppsResponse.apps:type_name -> pbgo.ServiceApp
	28, // 22: pbgo.UpdateAppStatusRequest.status:type_name -> pbgo.AppStatus
	29, // 23: pbgo.UpdateEndpointsRequest.endpoints:type_name -> pbgo.Endpoint
	0,  // 24: pbgo.InfoService.CreateCSPInfo:input_type -> pbgo.CreateCSPInfoRequest
	30, // 25: pbgo.InfoService.GetCSPIDs:input_type -> google.protobuf.Empty
	31, // 26: pbgo.InfoService.GetCSPIDsByContractID:input_type -> pbgo.IDRequest
	2,  // 27: pbgo.InfoService.UpdateCSPInfo:input_type -> pbgo.UpdateCSPInfoRequest
	31, // 28: pbgo.InfoService.GetCSPAuth:input_type -> pbgo.IDRequest
	3,  // 29: pbgo.InfoService.AddClusterInfo:input_type -> pbgo.AddClusterInfoRequest
	4,  // 30: pbgo.InfoService.UpdateClusterConf:input_type -> pbgo.UpdateClusterConfRequest
	5,  // 31: pbgo.InfoService.GetCluster:input_type -> pbgo.GetClusterRequest
	7,  // 32: pbgo.InfoService.GetClusters:input_type -> pbgo.GetClustersRequest
	9,  // 33: pbgo.InfoService.UpdateClusterStatus:input_type -> pbgo.UpdateClusterStatusRequest
	10, // 34: pbgo.InfoService.ValidateLabelUniqueness:input_type -> pbgo.ValidateLabelUniquenessRequest
	12, // 35: pbgo.AppInfoService.AddApp:input_type -> pbgo.AddAppRequest
	14, // 36: pbgo.AppInfoService.DeleteApp:input_type -> pbgo.DeleteAppRequest
	31, // 37: pbgo.AppInfoService.GetAppIDs:input_type -> pbgo.IDRequest
	31, // 38: pbgo.AppInfoService.GetAllAppsByClusterID:input_type -> pbgo.IDRequest
	15, // 39: pbgo.AppInfoService.GetAppsByName:input_type -> pbgo.GetAppsRequest
	15, // 40: pbgo.AppInfoService.GetAppsByType:input_type -> pbgo.GetAppsRequest
	16, // 41: pbgo.AppInfoService.GetApp:input_type -> pbgo.GetAppRequest
	13, // 42: pbgo.AppInfoService.UpdateApp:input_type -> pbgo.UpdateAppRequest
	19, // 43: pbgo.AppInfoService.UpdateAppStatus:input_type -> pbgo.UpdateAppStatusRequest
	20, // 44: pbgo.AppInfoService.UpdateEndpoints:input_type -> pbgo.UpdateEndpointsRequest
	32, // 45: pbgo.InfoService.CreateCSPInfo:output_type -> pbgo.IDResponse
	33, // 46: pbgo.InfoService.GetCSPIDs:output_type -> pbgo.IDsResponse
	33, // 47: pbgo.InfoService.GetCSPIDsByContractID:output_type -> pbgo.IDsResponse
	34, // 48: pbgo.InfoService.UpdateCSPInfo:output_type -> pbgo.SimpleResponse
	1,  // 49: pbgo.InfoService.GetCSPAuth:output_type -> pbgo.GetCSPAuthResponse
	32, // 50: pbgo.InfoService.AddClusterInfo:output_type -> pbgo.IDResponse
	34, // 51: pbgo.InfoService.UpdateClusterConf:output_type -> pbgo.SimpleResponse
	6,  // 52: pbgo.InfoService.GetCluster:output_type -> pbgo.GetClusterResponse
	8,  // 53: pbgo.InfoService.GetClusters:output_type -> pbgo.GetClustersResponse
	34, // 54: pbgo.InfoService.UpdateClusterStatus:output_type -> pbgo.SimpleResponse
	11, // 55: pbgo.InfoService.ValidateLabelUniqueness:output_type -> pbgo.ValidateLabelUniquenessResponse
	32, // 56: pbgo.AppInfoService.AddApp:output_type -> pbgo.IDResponse
	34, // 57: pbgo.AppInfoService.DeleteApp:output_type -> pbgo.SimpleResponse
	33, // 58: pbgo.AppInfoService.GetAppIDs:output_type -> pbgo.IDsResponse
	18, // 59: pbgo.AppInfoService.GetAllAppsByClusterID:output_type -> pbgo.GetAppsResponse
	18, // 60: pbgo.AppInfoService.GetAppsByName:output_type -> pbgo.GetAppsResponse
	18, // 61: pbgo.AppInfoService.GetAppsByType:output_type -> pbgo.GetAppsResponse
	17, // 62: pbgo.AppInfoService.GetApp:output_type -> pbgo.GetAppResponse
	34, // 63: pbgo.AppInfoService.UpdateApp:output_type -> pbgo.SimpleResponse
	34, // 64: pbgo.AppInfoService.UpdateAppStatus:output_type -> pbgo.SimpleResponse
	34, // 65: pbgo.AppInfoService.UpdateEndpoints:output_type -> pbgo.SimpleResponse
	45, // [45:66] is the sub-list for method output_type
	24, // [24:45] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_info_proto_init() }
func file_info_proto_init() {
	if File_info_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCSPInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCSPAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCSPInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClusterInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClustersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClustersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateLabelUniquenessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateLabelUniquenessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEndpointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_info_proto_goTypes,
		DependencyIndexes: file_info_proto_depIdxs,
		MessageInfos:      file_info_proto_msgTypes,
	}.Build()
	File_info_proto = out.File
	file_info_proto_rawDesc = nil
	file_info_proto_goTypes = nil
	file_info_proto_depIdxs = nil
}
