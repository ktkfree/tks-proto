/*
  Define messages to create new info to TKS-Info service. 
*/

syntax = "proto3";
package pbgo;

import "common.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/sktelecom/tks-proto/pbgo";

// InfoService is a service to manage info's document.
service InfoService {
  // CreateCSPInfo create new CSP Info for the contract id.
  rpc CreateCSPInfo(CreateCSPInfoRequest) returns (IDResponse) {}
  // GetCSPIDs returns all CSP ids.
  rpc GetCSPIDs(google.protobuf.Empty) returns (IDsResponse) {}
  // GetCSPIDsByContractID returns the CSP ids by the contract id.
  rpc GetCSPIDsByContractID(IDRequest) returns (IDsResponse) {}
  // UpdateCSPInfo updates an authentication config for CSP.
  rpc UpdateCSPInfo(UpdateCSPInfoRequest) returns (SimpleResponse) {}
  // GetCSPAuth returns an authentication info by csp id.
  rpc GetCSPAuth(IDRequest) returns (GetCSPAuthResponse) {}
  // AddClusterInfo adds newly created cluster information
  rpc AddClusterInfo(AddClusterInfoRequest) returns (IDResponse) {}
  // UpdateClusterConf updates the cluster configuration information
  rpc UpdateClusterConf(UpdateClusterConfRequest) returns (SimpleResponse) {}
  // GetClusterget cluster for the id of the cluster
  rpc GetCluster(GetClusterRequest) returns (GetClusterResponse) {}
  // GetClusters get every clusters on the mutlcluster
  rpc GetClusters(GetClustersRequest) returns (GetClustersResponse) {}
  // UpdateClusterStatus update Status of the Cluster
  rpc UpdateClusterStatus(UpdateClusterStatusRequest) 
    returns (SimpleResponse) {}
}

// AppInfoService is a service to manage Application info's document.
service AppInfoService {
  // AddApp creates new app info.
  rpc AddApp(AddAppRequest) returns (IDResponse) {}
  // DeleteApp deletes app info.
  rpc DeleteApp(DeleteAppRequest) returns (SimpleResponse) {}
  // GetAppID gets an array of app IDs with knowlege
  rpc GetAppIDs(IDRequest) returns (IDsResponse) {}
  // GetAllAppsByClusterID gets an array of app infos By the clusterID
  rpc GetAllAppsByClusterID(IDRequest) returns (GetAppsResponse) {}
  // GetAppsByName gets an array of app infos by app name in the cluster
  rpc GetAppsByName(GetAppsRequest) returns (GetAppsResponse) {}
  // GetAppsByType gets an array of app infos by app type in the cluster
  rpc GetAppsByType(GetAppsRequest) returns (GetAppsResponse) {}
  // GetApp gets app info by app ID
  rpc GetApp(GetAppRequest) returns (GetAppResponse) {}
  // UpdateApp updates an app info
  rpc UpdateApp(UpdateAppRequest) returns (SimpleResponse) {}
  // UpdateAppStatus updates status of the application
  rpc UpdateAppStatus(UpdateAppStatusRequest) returns (SimpleResponse) {}
  // UpdateEndpoints updates endpoints by the application
  rpc UpdateEndpoints(UpdateEndpointsRequest) returns (SimpleResponse) {}
}

// CreateCSPInfoRequest is used to create a new CSP Info
message CreateCSPInfoRequest {
  // contract_id is Global Unique MultiCluster ID
  string contract_id = 1;
  // csp_name is a name for users
  string csp_name = 2;
  // auth is an optional. This is an authentication info for IaaS.
  string auth = 3;
}

// GetCSPAuthResponse is used to get an authentication information by
//   csp id.
message GetCSPAuthResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // auth is an authentication info stiringified in JSON.
  string auth = 3;
}

// UpdateCSPInfoRequest updates an authenticationg information for CSP.
message UpdateCSPInfoRequest {
  // csp_id is .
  string csp_id = 1;
  // auth is an authentication info to update.
  string auth = 2; 
}

// AddClusterInfoRequest is used to add a new cluster info
message AddClusterInfoRequest {
  // contract_id is a contract ID.
  string contract_id = 1;
  // csp_id is an ID of CSPInfo.
  string csp_id = 2;
  // cluster_name is a cluster name defined by users
  string name = 3;
  // conf is a cluster configuration
  ClusterConf conf = 4;
}

// UpdateClusterConfRequest is used to update kubernetes cluster configuration
// to correspond with id
message UpdateClusterConfRequest {
  // cluster_id is a cluster ID
  string cluster_id = 1;
  // conf is a kubernetes cluster configuration
  ClusterConf conf = 2;
}

// GetClusterRequest is used to get info of MultiCluster to correspond with id
message GetClusterRequest {
  // cluster_id is a cluster ID
  string cluster_id = 1;
}

// GetClusterResponse contains a cluster info.
message GetClusterResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // cluster is info for the cluster
  Cluster cluster = 3;
}

// GetClustersRequest returns a list of clusters in specific CSP.
message GetClustersRequest {
  // csp_id is a Global Unique ID
  string csp_id = 1;
}

// GetClustersResponse contains an array of cluster infos. 
message GetClustersResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // cluster is info. for the cluster
  repeated Cluster clusters = 3;
}

// UpdateClusterStatusRequest is used to change status of the cluster
message UpdateClusterStatusRequest {
  // cluster_id is a cluster ID
  string cluster_id = 1;
  // status is the clusterstatus to be changed
  ClusterStatus status = 2;
}

// AddAppRequest is used to add a new app info
message AddAppRequest {
  // cluster_id is a cluster ID
  string cluster_id = 1;
  // service_app is a service_app info
  ServiceApp service_app = 2;
}

// UpdateAppRequest is used to update app info
message UpdateAppRequest {
  // cluster_id is a cluster ID
  string cluster_id = 1;
  // service_app is a service_app info
  ServiceApp service_app = 2;
}

// DeleteAppRequest is used to delete app info
message DeleteAppRequest {
  // cluster_id is a cluster ID
  string cluster_id = 1;
  // app_id is a app id which will be deleted
  string app_id = 2;
}

// GetAppsRequest is used to get an array of application infos on the cluster
message GetAppsRequest {
  // cluster_id is the global Unique cluster ID
  string cluster_id = 1;
  // app_name is a name of the application
  string app_name = 2;
  // app_type is a type of the application
  AppType type = 3;
}

// GetAppRequest is used to get an array of application infos on the cluster
message GetAppRequest {
  // cluster_id is the global Unique cluster ID
  string cluster_id = 1;
  // app_name is a name of the application
  string app_id = 2;
}

// GetAppResponse contains an array of cluster infos. 
message GetAppResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // app is a application Info
  ServiceApp app = 3;
}

// GetAppsResponse contains an array of application infos.
message GetAppsResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // apps is an array of applications
  repeated ServiceApp apps = 3;
}

// UpdateAppStatusRequest is used to change the status of the app
message UpdateAppStatusRequest {
  // cluster_id is the global Unique cluster ID
  string cluster_id = 1;
  // app_id is the application id to change the status
  string app_id = 2;
  // status is a AppStatus of the application
  AppStatus status = 3;
}

// UpdateEndpointsRequest is used to change status of the cluster
message UpdateEndpointsRequest {
  // cluster_id is the global Unique cluster ID
  string cluster_id = 1;
  // app_id is the application id to change the endpoint
  string app_id = 2;
  // endpoints is an array of endpoints to update
  repeated Endpoint endpoints = 3;
}
