/*
  Common.proto contains most commonly used interfaces 
  when communicating between TKS services.
*/
syntax = "proto3";
package pbgo;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sktelecom/tks-proto/pbgo";

// Code is a response code for gRpc request.
enum Code {
  OK_UNSPECIFIED = 0;
  CANCELLED = 1;
  UNKNOWN = 2;
  INVALID_ARGUMENT = 3;
  DEADLINE_EXCEEDED = 4;
  NOT_FOUND = 5;
  ALREADY_EXISTS = 6;
  PERMISSION_DENIED = 7;
  UNAUTHENTICATED = 16;
  RESOURCE_EXHAUSTED = 8;
  FAILED_PRECONDITION = 9;
  ABORTED = 10;
  OUT_OF_RANGE = 11;
  UNIMPLEMENTED = 12;
  INTERNAL = 13;
  UNAVAILABLE = 14;
}

// Error represents a detailed error for gRPC request.
message Error {
  // msg is an error message.
  string msg = 1;
}

// AppStatus represents a status of the application
enum AppStatus {
  APP_UNSPECIFIED = 0;
  APP_INSTALLING = 1;
  APP_RUNNING = 2;
  APP_DELETING = 4;
  APP_DELETED = 5;
  APP_ERROR = 6;
}

// ClusterStatus represents a status of the cluster
enum ClusterStatus {
  UNSPECIFIED = 0;
  INSTALLING = 1;
  RUNNING = 2;
  DELETING = 4;
  DELETED = 5;
  ERROR = 6;
}

// EpType is a key for endpoint.
enum EpType {
  EP_UNSPECIFIED = 0;
  THANOS = 1;
  PROMETHEUS = 2;
  GRAFANA = 3;
  KIALI = 4;
  KIBANA = 5;
  ELASTICSERCH = 6;
  CLOUD_CONSOLE = 7;
  HORIZON = 8;
  JAEGER = 9;
  KUBERNETES_DASHBOARD = 10;
}

// Endpoint represents each endpoint with type 
message Endpoint {
  // type indicate the software to make this endpoint
  EpType type = 1;
  // url is the url for the endpoint
  string url = 2;
}

// ServiceApp represents each Application.
message ServiceApp {
  //id for the application
  string app_id = 1;
  // name for users
  string app_name = 2;
  // type (lma/servicemesh)
  string type = 3;
  // owner is a upword link(??)  Cluster ID
  string owner = 4;
  // a status of the application eg) Installing/Running/Error
  AppStatus status = 5;
  // endpoints is an array of endpoints
  repeated Endpoint endpoints = 6;
  // external_lable is the label used for globally unique identification
  string external_label = 7;
  // creation_timestamp is  a creatioin timestamp for the application
  google.protobuf.Timestamp creation_timestamp = 8;
  // last_transition_time is a timestamp for the trigger of status change
  google.protobuf.Timestamp last_transition_time  = 9;
}

// Cluster represents each Cluster.
message Cluster {
  // is is a unique id for the cluster
  string id = 1;
  // name is a cluster name for users
  string name = 2;
  // created_ts is a creatioin timestamp for the cluster
  google.protobuf.Timestamp created_ts = 3;
  // last_updated_ts is a timestamp for the trigger of status change
  google.protobuf.Timestamp last_updated_ts  = 4;
  // status is a status of the cluste eg) Installing/Running/Error
  ClusterStatus status = 5;
  // contract_id is a contract ID.
  string contract_id = 6;
  // tenant_id is a tenant ID.
  string tenant_id = 7;
  // service_apps is a array of applications
  repeated ServiceApp service_apps = 8;
  // kubeconfig is a default kubeconfig for the cluster
  string kubeconfig = 9;
}

// IDRequest is a request with a id
message IDRequest {
  // id is a id to ask
  string id = 1;
}

// SimpleResponse returns a result for the request (the simplest return type)
message SimpleResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
}

// IDsResponse returns arry of ids
message IDsResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // ids is a array of ids
  repeated string ids = 3;
}

// IDResponse returns a id
message IDResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // id is a id
  string id = 3;
}